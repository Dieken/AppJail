#!/bin/sh
#
# Copyright (c) 2022-2023, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

lib_load "${LIBDIR}/check_func"
lib_load "${LIBDIR}/colors"
lib_load "${LIBDIR}/random"

disable_desc="Disable a parameter."

disable_main()
{
	local jail_path
	local bootdir
	local jail_name="$1"
	local command="$2"

	shift 2

	if lib_check_empty "${jail_name}" || lib_check_empty "${command}"; then
		disable_usage
		exit ${EX_USAGE}
	fi

	if ! lib_check_jailname "${jail_name}"; then
		lib_err ${EX_DATAERR} "Invalid jail name \"${jail_name}\""
	fi

	lib_set_logprefix " [`random_color`${jail_name}${COLOR_DEFAULT}]"

	jail_path="${JAILDIR}/${jail_name}"
	if [ ! -d "${jail_path}/jail" ]; then
		lib_err ${EX_NOINPUT} "Cannot find the jail \`${jail_name}\`"
	fi

	case "${command}" in
		start|stop|run) ;;
		*) disable_usage; exit ${EX_USAGE} ;;
	esac

	bootdir="${jail_path}/conf/boot/${command}"
	if [ ! -d "${bootdir}" ]; then
		lib_err ${EX_NOINPUT} "The ${command} command is not enabled."
	fi

	# Remove all ${command} parameters
	if [ $# -eq 0 ]; then
		rm -rf "${bootdir}"
		return 0
	fi

	disable_${command} "${jail_name}" "$@"
}

disable_start()
{
	local _o
	local jail_name
	local jail_path
	local bootdir
	local opt_run_initscript=0
	local opt_create_args=0
	local opt_initscript=0
	local opt_start_args=0
	local opt_template=0
	local opt_environment=0

	jail_name="$1"; shift
	jail_path="${JAILDIR}/${jail_name}"
	bootdir="${jail_path}/conf/boot/start"

	while getopts ":cIistV" _o; do
		case "${_o}" in
			c)
				opt_create_args=1
				;;
			I)
				opt_run_initscript=1
				;;
			i)
				opt_initscript=1
				;;
			s)
				opt_start_args=1
				;;
			t)
				opt_template=1
				;;
			V)
				opt_environment=1
				;;
			*)
				lib_err ${EX_DATAERR} "Invalid option -- ${OPTARG}"
				;;
		esac
	done

	if [ ${opt_run_initscript} -eq 1 ]; then
		rm -f "${bootdir}/norun_initscript"
	fi

	if [ ${opt_create_args} -eq 1 ]; then
		rm -f "${bootdir}/create_args"
	fi

	if [ ${opt_initscript} -eq 1 ]; then
		rm -f "${bootdir}/initscript"
	fi

	if [ ${opt_start_args} -eq 1 ]; then
		rm -f "${bootdir}/start_args"
	fi

	if [ ${opt_template} -eq 1 ]; then
		rm -f "${bootdir}/template"
	fi

	if [ ${opt_environment} -eq 1 ]; then
		rm -f "${bootdir}/environment"
	fi
}

disable_stop()
{
	local _o
	local jail_name
	local jail_path
	local bootdir
	local opt_run_initscript=0
	local opt_initscript=0
	local opt_args=0
	local opt_environment=0

	jail_name="$1"; shift
	jail_path="${JAILDIR}/${jail_name}"
	bootdir="${jail_path}/conf/boot/stop"

	while getopts ":IipV" _o; do
		case "${_o}" in
			I)
				opt_run_initscript=1
				;;
			i)
				opt_initscript=1
				;;
			p)
				opt_args=1
				;;
			V)
				opt_environment=1
				;;
			*)
				lib_err ${EX_DATAERR} "Invalid option -- ${OPTARG}"
				;;
		esac
	done

	if [ ${opt_run_initscript} -eq 1 ]; then
		rm -f "${bootdir}/norun_initscript"
	fi

	if [ ${opt_initscript} -eq 1 ]; then
		rm -f "${bootdir}/initscript"
	fi

	if [ ${opt_args} -eq 1 ]; then
		rm -f "${bootdir}/args"
	fi

	if [ ${opt_environment} -eq 1 ]; then
		rm -f "${bootdir}/environment"
	fi
}

disable_run()
{
	local _o
	local jail_name
	local jail_path
	local bootdir
	local opt_initscript=0
	local opt_args=0
	local opt_environment=0

	jail_name="$1"; shift
	jail_path="${JAILDIR}/${jail_name}"
	bootdir="${jail_path}/conf/boot/run"

	while getopts ":ipV" _o; do
		case "${_o}" in
			i)
				opt_initscript=1
				;;
			p)
				opt_args=1
				;;
			V)
				opt_environment=1
				;;
			*)
				lib_err ${EX_DATAERR} "Invalid option -- ${OPTARG}"
				;;
		esac
	done

	if [ ${opt_initscript} -eq 1 ]; then
		rm -f "${bootdir}/initscript"
	fi

	if [ ${opt_args} -eq 1 ]; then
		rm -f "${bootdir}/args"
	fi

	if [ ${opt_environment} -eq 1 ]; then
		rm -f "${bootdir}/environment"
	fi
}

disable_help()
{
	cat << EOF
`disable_usage`

${disable_desc}

Parameters:
    start        -- Disable parameters for the start command. 
    stop         -- Disable parameters for the stop command.
    run          -- Disable paraemters for the run command.

Options for start:
    -c           -- Disable parameters *create functions.
    -s           -- Disable parameters for *start functions.
    -t           -- Disable the custom template.

Options for stop:
    -p           -- Disable parameters for *stop functions.

Options for run:
    -p           -- Disable parameters for *cmd functions.

options for start, stop and run:
    -i           -- Disable the custom initscript.
    -V           -- Disable the environment variables.

Options for start and stop:
    -I           -- Run the initscript.
EOF
}

disable_usage()
{
	cat << EOF
usage: disable jail start [[-I | -cistV]]
       disable jail stop [[-I | -ipV]]
       disable jail run [[-ipV]]
EOF
}
