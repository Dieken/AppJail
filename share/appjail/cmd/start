#!/bin/sh
#
# Copyright (c) 2022, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

start_desc="Create a jail using a template from an installed appjail."

start_main()
{
	local _o
	local appjail
	local opts
	local opt_parameters=0
	local template

	while getopts ":p:" _o; do
		case "${_o}" in
			p)
				opts="${opts} -p ${OPTARG}"
				opt_parameters=1
				;;
			*)
				start_usage
				exit ${EX_USAGE}
				;;
		esac
	done
	shift $((OPTIND-1))

	appjail="$1"

	if [ -z "${appjail}" ]; then
		start_usage
		exit ${EX_USAGE}
	fi

	shift
	
	. "${LIBDIR}/replace"
	. "${LIBDIR}/su"
	. "${LIBDIR}/tempfile"

	if [ ${opt_parameters} -eq 1 ]; then
		template="`lib_generate_tempfile`"
		lib_atexit_add rm -f "${template}"
		opts="${opts} -t \"${template}\""
	fi

	start_appjail ${opts} -s -c "${CONFIG}" -a "${appjail}" -- $@
}

start_appjail()
{
	lib_debug "Starting..."

	lib_su /bin/sh "${SCRIPTSDIR}/service.sh" $@
}

start_help()
{
	start_usage

	echo
	echo "${start_desc}"
	echo
	echo "This command creates a jail from an installed appjail. After creating the jail, it executes the"
	echo "*start functions of the jail init script."
	echo
	echo "  -p             This flag is useful for setting parameters temporarily. If you need to set them"
	echo "                 permanently, see \`appjail help set\` and if you need a more complex way to edit"
	echo "                 a template, see \`appjail help edit\`. May be used multiples times."
	echo "  appjail        Name of the appjail application."
}

start_usage()
{
	echo "usage: start [-p key=value] appjail [args]"
}
