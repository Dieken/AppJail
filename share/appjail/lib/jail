#
# Copyright (c) 2022-2023, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

lib_load "${LIBDIR}/log"
lib_load "${LIBDIR}/sysexits"

lib_jail_exists()
{
	local jail_name="$1"

	if [ -z "${jail_name}" ]; then
		lib_err ${EX_USAGE} "usage: lib_jail_exists jail_name"
	fi

	if jls -j "${jail_name}" > /dev/null 2>&1; then
		return 0
	else
		return 1
	fi
}

lib_jail_created_by_appjail()
{
	local path
	local jail_name="$1"

	if [ -z "${jail_name}" ]; then
		lib_err ${EX_USAGE} "usage: lib_jail_created_by_appjail jail_name"
	fi

	path=`jls -j "${jail_name}" path`
	if [ "${path}" = "${JAILDIR}/${jail_name}/jail" ]; then
		return 0
	else
		return 1
	fi
}

lib_jailparam_name()
{
	local args="$1"
	local separator="$2"
	local parameter

	if [ -z "${args}" -o -z "${separator}" ]; then
		lib_err ${EX_USAGE} "usage: lib_jailparam_name args separator"
	fi

	args=`printf "%s" "${args}" | sed -Ee 's/^[[:space:]]*//'`
	parameter=`printf "%s" "${args}" | cut -s -d "${separator}" -f1`
	if [ -z "${parameter}" ]; then
		parameter="${args}"
	fi

	printf "%s" "${parameter}"
}

lib_jailparam_value()
{
	local args="$1"
	local separator="$2"

	if [ -z "${args}" -o -z "${separator}" ]; then
		lib_err ${EX_USAGE} "usage: lib_jailparam_value args separator"
	fi

	printf "%s" "${args}" | cut -s -d "${separator}" -f2-
}

lib_split_jailparams()
{
	local parameter="$1"

	if [ -z "${parameter}" ]; then
		lib_err ${EX_USAGE} "usage: lib_split_jailparams parameter"
	fi

	lib_split_sjailparams "${parameter}" | sed -Ee $'s/^["]//' -e $'s/["]$//'
}

lib_split_sjailparams()
{

	local parameter="$1"

	if [ -z "${parameter}" ]; then
		lib_err ${EX_USAGE} "usage: lib_split_jailparams parameter"
	fi

	lib_split_ujailparams "${parameter}" | sed -Ee "s/\\\\([\"])/\1/g"
}

lib_split_ujailparams()
{
	local parameter="$1"

	if [ -z "${parameter}" ]; then
		lib_err ${EX_USAGE} "usage: lib_split_ujailparams parameter"
	fi

	printf "%s" "${parameter}" | grep -Eoe $'[^ ]+' -e $'["]([^"]|\\\\["])+["]'
}

lib_ajconf()
{
    APPJAIL_CONFIG_JAILDIR="${JAILDIR}"; export APPJAIL_CONFIG_JAILDIR

    "${UTILDIR}/appjail-config/appjail-config" "$@"
}
