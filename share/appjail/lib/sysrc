#
# Copyright (c) 2022, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

. "${LIBDIR}/jail_types"
VALID_JAIL_TYPES="${JAIL_TYPE_TINY} ${JAIL_TYPE_HUGE}"
VALID_JAIL_USETYPES="${JAIL_TYPE_THIN} ${JAIL_TYPE_THICK}"

lib_jail_get()
{
	local _rc _chk _t _k _d _vls

	_rc="$1"
	_k="$2"
	_d="$3"
	shift 3

	_vls=$@

	if [ -z "${_rc}" -o -z "${_d}" ]; then
		lib_err ${EX_USAGE} "usage: lib_jail_get rc_conf key default values..."
	fi

	if [ ! -f "${_rc}" ]; then
		echo "${_d}"
		return 0
	fi

	_t="`sysrc -nf "${_rc}" ${_k}`"

	for _chk in ${_vls}; do
		if [ "${_t}" = "${_chk}" ]; then
			echo "${_t}"
			return 0
		fi
	done

	# Invalid type
	echo "${JAIL_TYPE_INVALID}"
	return 1
}

lib_jail_gettype()
{
	local rc_conf

	rc_conf="$1"

	if [ -z "${rc_conf}" ]; then
		lib_err ${EX_USAGE} "lib_jail_gettype rc_conf"
	fi

	lib_jail_get "${rc_conf}" "type" "${JAIL_TYPE_HUGE}" ${VALID_JAIL_TYPES}

	return $?
}

lib_jail_getusetype()
{
	local rc_conf

	rc_conf="$1"

	if [ -z "${rc_conf}" ]; then
		lib_err ${EX_USAGE} "lib_jail_getusetype rc_conf"
	fi

	lib_jail_get "${rc_conf}" "use_type" "${JAIL_TYPE_THICK}" ${VALID_JAIL_USETYPES}

	return $?
}
