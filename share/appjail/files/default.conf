#
# The root prefix used by other parameters.
#
PREFIX="${PREFIX:-%%PREFIX%%}"

### ZFS
#
# Enable or disable ZFS support. Please do not mix ZFS on a already UFS system,
# change PREFIX instead. Use 0 to disable ZFS support or another value to
# enable it.
#
ENABLE_ZFS="${ENABLE_ZFS:-0}"
#
# Pool name.
#
ZPOOL="${ZPOOL:-zroot}"
#
# It is like PREFIX, but for ZFS.
#
ZROOTFS="${ZROOTFS:-appjail}"
#
# Optionally, you can set options or parameters for zfs-create(8). You must escape
# shell characters because appjail does not.
#
ZOPTS="${ZOPTS:--o compress=lz4}"

### System directories
# 
# Directories used by appjail.
#
# PREFIX of shared files.
#
SHAREDIR="${SHAREDIR:-${PREFIX}/share/appjail}"
#
# Where appjail commands are stored.
#
COMMANDS="${COMMANDS:-${SHAREDIR}/cmd}"
#
# Files used by some parts of appjail.
#
FILESDIR="${FILESDIR:-${SHAREDIR}/files}"
#
# "Libraries" or sh scripts where functions are stored.
#
LIBDIR="${LIBDIR:-${SHAREDIR}/lib}"
#
# Scripts used by some parts of appjail to perform a specific task.
#
SCRIPTSDIR="${SCRIPTSDIR:-${SHAREDIR}/scripts}"
#
# Binaries used by some parts of appjail to perform a specific task.
#
UTILDIR="${UTILDIR:-${PREFIX}/libexec/appjail}"
#
# PREFIX of Makejail files.
#
MAKEJAILDIR="${MAKEJAILDIR:-${SHAREDIR}/makejail}"
#
# Where Makejail commands are stored.
#
MAKEJAIL_COMMANDS="${MAKEJAIL_COMMANDS:-${MAKEJAILDIR}/cmd}"
#
# When the user uses a command in a Makejail file, he calls the command from
# {MAKEJAIL_COMMANDS}. Those commands can optionally store the output in a
# specific format known to itself. When all commands are processed, makejail
# will call the commands from {MAKEJAIL_WCOMMANDS} to write the initscript.
#
MAKEJAIL_WCOMMANDS="${MAKEJAIL_WCOMMANDS:-${MAKEJAILDIR}/write}"
#
# Directory where appjail or user generated files are stored.
#
DATADIR="${DATADIR:-${PREFIX}/appjail}"
#
# Where files are stored for later reuse.
#
CACHEDIR="${CACHEDIR:-${DATADIR}/cache}"
#
# Where the networks and their files are stored.
#
NETWORKDIR="${NETWORKDIR:-${DATADIR}/networks}"
#
# Where the tarballs or files extracted to make a jail are stored.
#
RELEASEDIR="${RELEASEDIR:-${DATADIR}/releases}"
#
# Where FreeBSD components such as base.txz, lib32.txz, etc. are stored.
#
COMPONENTSDIR="${COMPONENTSDIR:-${CACHEDIR}/components}"

### User directories
#
# Where the log files are stored. See the `appjail logs` command for details.
#
LOGDIR="${LOGDIR:-/var/log/appjail}"
#
# Where jails and their files are stored.
#
JAILDIR="${JAILDIR:-${DATADIR}/jails}"
#
# Temporary directory where temporary files are stored.
#
TMPDIR="${TMPDIR:-${CACHEDIR}/tmp/.appjail}"
#
# Where git repositories are stored when using git methods in Makejail.
#
GLOBAL_GIT_CACHEDIR="${GLOBAL_GIT_CACHEDIR:-${CACHEDIR}/git}"

#
# Default template when using `appjail start` or `appjail quick`.
#
# See `appjail start -t` and `template` in `appjail quick`.
#
DEFAULT_TEMPLATE="${DEFAULT_TEMPLATE:-${FILESDIR}/default_template.conf}"

#
# Default timezone.
#
# If empty, `/etc/localtime` will be used instead of creating a symlink.
#
#DEFAULT_TIMEZONE=
#
# See `tzdata` in `appjail quick`.
#
USE_TIMEZONE="${USE_TIMEZONE:-1}"

#
# Sets the boot flag to a jail.
#
# See `boot` in `appjail quick`.
#
DEFAULT_BOOT="${DEFAULT_BOOT:-1}"

#
# Default jail priority.
#
# See `priority` in `appjail quick`.
#
DEFAULT_PRIORITY="${DEFAULT_PRIORITY:-0}"

#
# Parallel start and stop (jails).
#
USE_PARALLEL="${USE_PARALLEL:-1}"
#
# Parallel start and stop (network nat).
#
USE_PARALLEL_NATNET="${USE_PARALLEL_NATNET:-1}"

#
# Ruleset number.
#
# See `devfs_ruleset` and `linuxfs` and `mount_devfs` in `appjail quick`.
#
DEFAULT_DEVFS_RULESET="${DEFAULT_DEVFS_RULESET:-5}"
#
# Put the `mount.devfs` parameter in the template.
#
# See `mount_devfs` in `appjail quick`.
#
DEFAULT_MOUNT_DEVFS="${DEFAULT_MOUNT_DEVFS:-0}"

#
# Start, restart, run and log into the jail after creating it.
#
# See `start`, `restart`, `run`, `login` and `login_user` in `appjail quick`.
#
DEFAULT_START="${DEFAULT_START:-0}"
DEFAULT_RESTART="${DEFAULT_RESTART:-0}"
DEFAULT_RUN="${DEFAULT_RUN:-0}"
DEFAULT_LOGIN="${DEFAULT_LOGIN:-0}"
DEFAULT_LOGIN_USER="${DEFAULT_LOGIN_USER:-root}"

#
# Default directory used for copying files.
#
# See `copydir` in `appjail quick`.
#
DEFAULT_COPYDIR="${DEFAULT_COPYDIR:-/}"

#
# Overwrites the jail when using the `appjail quick` command.
#
DEFAULT_OVERWRITE="${DEFAULT_OVERWRITE:-0}"

#
# When the user does not provide a hostname to the jail, appjail sets a hostname
# (jail name + {HOST_DOMAIN}).
#
HOST_DOMAIN="${HOST_DOMAIN:-.appjail}"

### NETWORKING
#
# The packet filter or firewall to use. Valid values are pf, ipfw and ipfilter, but currently
# only pf is supported.
#
USE_FIREWALL="${USE_FIREWALL:-pf}"
#
# The external interface used by commands like expose and nat. As you can see, the code below
# tries to get the interface from the IPv4 routes, if unsuccessful, it tries again using
# IPv6 routes.
#
if [ -z "${EXT_IF}" ]; then
	# Get the external interface from the IPv4 routes.
	EXT_IF=`route -4 get default 2> /dev/null | grep 'interface:' | cut -d' ' -f4-`

	# If not, try to get the external interface from the IPv6 routes.
	if [ -z "${EXT_IF}" ]; then
		EXT_IF=`route -6 get default 2> /dev/null | grep 'interface:' | cut -d' ' -f4-`
	fi

	if [ -z "${EXT_IF}" ]; then
		echo "The external interface is not configured!" >&2
		exit 78 # EX_CONFIG
	fi
fi
#
# The name or group of the network interface to transmit packets on.
#
ON_IF="${ON_IF:-${EXT_IF}}"
#
# The default bridge when using the `appjail network attach`
# and `appjail network detach` commands.
#
SHARED_BRIDGE="${SHARED_BRIDGE:-appjail}"
#
# Default MTU when no interface is provided in `appjail network attach`.
#
# The recommended value is 1500, but if you cannot or are not sure about using this MTU, use 576.
# See RFC 791.
#
DEFAULT_MTU="${DEFAULT_MTU:-1500}"
#
# Default resolv.conf(5) file used by the `appjail quick` command.
#
DEFAULT_RESOLV_CONF="${DEFAULT_RESOLV_CONF:-/etc/resolv.conf}"
#
# See `resolv_conf` in `appjail quick`.
#
USE_RESOLV_CONF="${USE_RESOLV_CONF:-1}"

### Name of the log files.
#
# The CREATED keyword of the `appjail jail get` and `appjail jail list` commands displays the
# jail creation time. This is the format used by date(1) to get a human display instead of
# using unix time.
#
CREATED_FORMAT="${CREATED_FORMAT:-%Y-%m-%d %H:%M:%S}"
#
# As you can see below these variables use a command to get a string and use it as the
# filename of the log files. The slash cannot be used.
#
# See `exec.consolelog` in jail(8).
#
CONSOLELOG_NAME="${CONSOLELOG_NAME:-date +%Y-%m-%d.log}"
#
# When ENABLE_LOGGING_OUTPUT is not equal to 0. See ENABLE_LOGGING_OUTPUT below for details.
#
SESSION_ID_NAME="${SESSION_ID_NAME:-date +%Y-%m-%d.log}"
#
# The name of the `appjail startup` command log files.
#
STARTUPLOG_NAME="${STARTUPLOG_NAME:-date +%Y-%m-%d.log}"

#
# The freebsd-update.conf(5) configuration file when updating or upgrading a FreeBSD jail or
# release.
#
FREEBSD_UPDATE_CONF="${FREEBSD_UPDATE_CONF:-/etc/freebsd-update.conf}"

### FETCH
#
# Default method to download components or other related files.
#
DEFAULT_FETCH_METHOD="${DEFAULT_FETCH_METHOD:-www}"
#
# Default method to install those components or other related files.
#
DEFAULT_INSTALL_METHOD="${DEFAULT_INSTALL_METHOD:-standard}"
#
# The default URL where the FreeBSD components will be downloaded.
#
DOWNLOADURL="${DOWNLOADURL:-https://download.freebsd.org/releases/%a/%v}"
#
# Default components to download and extract for each version.
#
COMPONENTS="${COMPONENTS:-base.txz}"
#
# The default release name when using `appjail fetch` command.
#
DEFAULT_RELEASE="${DEFAULT_RELEASE:-default}"
#
# Command used to download the components. The following keywords will be substituted at runtime:
# 
# * %o: output name.
# * %u: URL where the components will be downloaded.
# * %c: Component name.
#
# Notes:
#
# * Appjail will quote the string at runtime and escape any valid shell characters.
# * Use %% to escape those characters.
#
WWW_CMD="${WWW_CMD:-fetch -Rpm -o %o %u/%c}"

#
# Command used to download the Makejail in the `fetch` method of the `appjail makejail` command.
# The following keywords will be substituted at runtime:
#
# * %o: Output name.
# * %u: URL where the Makejail will be downloaded.
#
MAKEJAIL_FETCH_CMD="${MAKEJAIL_FETCH_CMD:-fetch -Rpm -o %o %u}"

#
# Command used to download the tarball file in the Makejail ADD command.
# The following keywords will be substituted at runtime:
#
# * %u: URL where the tarball will be downloaded.
#
MAKEJAIL_ADD_FETCH_CMD="${MAKEJAIL_ADD_FETCH_CMD:-fetch -Rpm -o - %u}"

#
# Default FreeBSD architecture. 
#
if [ -z "${FREEBSD_ARCH}" ]; then
	FREEBSD_ARCH=`uname -m`
fi
#
# Default FreeBSD version.
#
if [ -z "${FREEBSD_VERSION}" ]; then
	FREEBSD_VERSION=`freebsd-version | grep -Eo '[0-9]+\.[0-9]+-[a-zA-Z0-9]+'`
fi

### Debootstrap
#
# debootstrap(8) command to bootstrap a basic debian system.
# The following keywords will be substituted at runtime.
#
# * %a: Architecture.
# * %s: Suite name or release name.
# * %o: Directory where the files will be stored.
#
DEBOOTSTRAP_CMD="${DEBOOTSTRAP_CMD:-debootstrap --foreign --arch=%a --no-check-gpg %s %o}"
#
# Default architecture used by the debian system in debootstrap(8).
#
DEBOOTSTRAP_ARCH="${DEBOOTSTRAP_ARCH:-${FREEBSD_ARCH}}"
#
# See MIRROR in debootstrap(8). 
#
#DEBOOTSTRAP_MIRROR=
#
# See SCRIPT in debootstrap(8).
#
#DEBOOTSTRAP_SCRIPT=
#
# See Cache-Start in apt.conf(5).
#
APT_CACHE_START="${APT_CACHE_START:-251658240}"

#
# Appjail normally always displays the message using four messages types: info, warn, error and debug.
# debug is optional, but it displays very useful information not only for debugging.
#
ENABLE_DEBUG="${ENABLE_DEBUG:-1}"

### Colors
#
# Colors are useful to identify errors, warnings and specific information much faster for our eyes.
#
ENABLE_COLORS="${ENABLE_COLORS:-1}"
#
# Some commands manipulate many jails, so randomizing the colors is very useful to differentiate them.
#
ENABLE_RANDOM_COLORS="${ENABLE_RANDOM_COLORS:-1}"

#
# Logs all appjail output from start to finish. 
#
ENABLE_LOGGING_OUTPUT="${ENABLE_LOGGING_OUTPUT:-0}"
#
# See -t flag in script(1).
#
SCRIPT_TIME="${SCRIPT_TIME:-30}"

### Compression & Decompression
#
# The rest of the parameters are self-explanatory.
#
# Compression is normally used to export a jail in a single file.
#
# ZFS only uses the non-tar parameters. UFS only uses the tar parameters.
#
# Decompression is used to import a jail and decompress the related components and
# files.
#
# The following program are not part of the base system, but can be installed using
# the ports collection or the package manager:
#
# * archivers/lrzip
# * archivers/lzop
#
#
# Global arguments that are valid for both compression and decompression (e.g.: -v).
#
#TAR_ARGS=
TAR_COMPRESS_ARGS="${TAR_ARGS}"
TAR_DECOMPRESS_ARGS="${TAR_ARGS}"

TAR_BZIP_ARGS="${TAR_BZIP_ARGS:-${TAR_COMPRESS_ARGS} --bzip}"
TAR_GZIP_ARGS="${TAR_GZIP_ARGS:-${TAR_COMPRESS_ARGS} --gzip}"
TAR_LRZIP_ARGS="${TAR_LRZIP_ARGS:-${TAR_COMPRESS_ARGS} --lrzip}"
TAR_LZ4_ARGS="${TAR_LZ4_ARGS:-${TAR_COMPRESS_ARGS} --lz4}"
TAR_LZMA_ARGS="${TAR_LZMA_ARGS:-${TAR_COMPRESS_ARGS} --lzma}"
TAR_LZOP_ARGS="${TAR_LZOP_ARGS:-${TAR_COMPRESS_ARGS} --lzop}"
TAR_XZ_ARGS="${TAR_XZ_ARGS:-${TAR_COMPRESS_ARGS} --xz}"
TAR_ZSTD_ARGS="${TAR_ZSTD_ARGS:-${TAR_COMPRESS_ARGS} --zstd}"

#BZIP_ARGS=
BZIP_COMPRESS_ARGS="${BZIP_COMPRESS_ARGS:-${BZIP_ARGS}}"
BZIP_COMPRESS_CMD="${BZIP_COMPRESS_CMD:-bzip2 ${BZIP_COMPRESS_ARGS}}"
BZIP_DECOMPRESS_ARGS="${BZIP_DECOMPRESS_ARGS:-${BZIP_ARGS}}"
BZIP_DECOMPRESS_CMD="${BZIP_DECOMPRESS_CMD:-bzip2 ${BZIP_DECOMPRESS_ARGS} -d}"

#GZIP_ARGS=
GZIP_COMPRESS_ARGS="${GZIP_COMPRESS_ARGS:-${GZIP_ARGS}}"
GZIP_COMPRESS_CMD="${GZIP_COMPRESS_CMD:-gzip ${GZIP_COMPRESS_ARGS}}"
GZIP_DECOMPRESS_ARGS="${GZIP_DECOMPRESS_ARGS:-${GZIP_ARGS}}"
GZIP_DECOMPRESS_CMD="${GZIP_DECOMPRESS_CMD:-gzip -d ${GZIP_DECOMPRESS_ARGS}}"

#LRZIP_ARGS=
LRZIP_COMPRESS_ARGS="${LRZIP_COMPRESS_ARGS:-${LRZIP_ARGS}}"
LRZIP_COMPRESS_CMD="${LRZIP_COMPRESS_CMD:-lrzip ${LRZIP_COMPRESS_ARGS}}"
LRZIP_DECOMPRESS_ARGS="${LRZIP_DECOMPRESS_ARGS:-${LRZIP_ARGS}}"
LRZIP_DECOMPRESS_CMD="${LRZIP_DECOMPRESS_CMD:-lrzip -d ${LRZIP_DECOMPRESS_ARGS}}"

#LZ4_ARGS=
LZ4_COMPRESS_ARGS="${LZ4_COMPRESS_ARGS:-${LZ4_ARGS}}"
LZ4_COMPRESS_CMD="${LZ4_COMPRESS_CMD:-lz4 ${LZ4_COMPRESS_ARGS}}"
LZ4_DECOMPRESS_ARGS="${LZ4_DECOMPRESS_ARGS:-${LZ4_ARGS}}"
LZ4_DECOMPRESS_CMD="${LZ4_DECOMPRESS_CMD:-lz4 -d ${LZ4_DECOMPRESS_ARGS}}"

#LZMA_ARGS=
LZMA_COMPRESS_ARGS="${LZMA_COMPRESS_ARGS:-${LZMA_ARGS}}"
LZMA_COMPRESS_CMD="${LZMA_COMPRESS_CMD:-lzma ${LZMA_COMPRESS_ARGS}}"
LZMA_DECOMPRESS_ARGS="${LZMA_DECOMPRESS_ARGS:-${LZMA_ARGS}}"
LZMA_DECOMPRESS_CMD="${LZMA_DECOMPRESS_CMD:-lzma -d ${LZMA_DECOMPRESS_ARGS}}"

#LZOP_ARGS=
LZOP_COMPRESS_ARGS="${LZOP_COMPRESS_ARGS:-${LZOP_ARGS}}"
LZOP_COMPRESS_CMD="${LZOP_COMPRESS_CMD:-lzop ${LZOP_COMPRESS_ARGS}}"
LZOP_DECOMPRESS_ARGS="${LZOP_DECOMPRESS_ARGS:-${LZOP_ARGS}}"
LZOP_DECOMPRESS_CMD="${LZOP_DECOMPRESS_CMD:-lzop -d ${LZOP_DECOMPRESS_ARGS}}"

#XZ_ARGS=
XZ_COMPRESS_ARGS="${XZ_COMPRESS_ARGS:-${XZ_ARGS}}"
XZ_COMPRESS_CMD="${XZ_COMPRESS_CMD:-xz ${XZ_COMPRESS_ARGS}}"
XZ_DECOMPRESS_ARGS="${XZ_DECOMPRESS_ARGS:-${XZ_ARGS}}"
XZ_DECOMPRESS_CMD="${XZ_DECOMPRESS_CMD:-xz -d ${XZ_DECOMPRESS_ARGS}}"

#ZSTD_ARGS=
ZSTD_COMPRESS_ARGS="${ZSTD_COMPRESS_ARGS:-${ZSTD_ARGS}}"
ZSTD_COMPRESS_CMD="${ZSTD_COMPRESS_CMD:-zstd ${ZSTD_COMPRESS_ARGS}}"
ZSTD_DECOMPRESS_ARGS="${ZSTD_DECOMPRESS_ARGS:-${ZSTD_ARGS}}"
ZSTD_DECOMPRESS_CMD="${ZSTD_DECOMPRESS_CMD:-zstd -d ${ZSTD_DECOMPRESS_ARGS}}"
