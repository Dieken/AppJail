#!/bin/sh
#
# Copyright (c) 2022-2023, Jes√∫s Daniel Colmenares Oviedo <DtxdF@disroot.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

. "${AJ_CONFIG}"
. "${LIBDIR}/load"

lib_load "${LIBDIR}/log"
lib_load "${LIBDIR}/jail"
lib_load "${LIBDIR}/replace"

main()
{
	local input="$1"

	local escape_chars
	escape_chars='`"\'
	
	# Default values
	while IFS= read -r arg; do
		local name=`lib_jailparam_name "${arg}" "="`
		local default_value=`lib_jailparam_value "${arg}" "="`

		name=`get_mkvarkey "${name}"`

		if ! lib_check_empty "${default_value}"; then
			default_value=`lib_escape_string "${default_value}" "" "${escape_chars}"`
		fi

		printf "%s=%s\n" "${name}" "\"${default_value}\""
	done < "${input}"

	# Parser
	init_parse
	while IFS= read -r arg; do
		local name=`lib_jailparam_name "${arg}" "="`
		name=`get_mkvarkey "${name}"`

		option_parse "${name}"
	done < "${input}"
	end_parse

	# Required
	while IFS= read -r arg; do
		local name=`lib_jailparam_name "${arg}" "="`

		if lib_check_mkvar "${name}" 1; then
			continue
		fi

		required_parse "${name}"
	done < "${input}"
}

get_mkvarkey()
{
	local key="$1"
	if [ -z "${key}" ]; then
		lib_err ${EX_USAGE} "usage: get_mkvarkey key"
	fi

	printf "%s" "${key}" | sed -Ee 's/^([a-zA-Z_][a-zA-Z0-9_]*)\??$/\1/'
}

init_parse()
{
	cat << EOF
lib_load "\${LIBDIR}/check_func"

while [ \$# -gt 0 ]; do
	case "\$1" in
EOF
}

option_parse()
{
	local name="$1"
	if [ -z "${name}" ]; then
		lib_err ${EX_USAGE} "usage: option_parse name"
	fi

	cat << EOF
		--${name})
			${name}="\$2"; shift
			;;
EOF
}

required_parse()
{
	local name="$1"
	if [ -z "${name}" ]; then
		lib_err ${EX_USAGE} "usage: required_parse name"
	fi

	cat << EOF
if lib_check_empty "\$${name}"; then
	lib_err \${EX_DATAERR} "option requires an argument -- ${name}"
fi
EOF
}

end_parse()
{
	cat << EOF
		--)
			shift
			break
			;;
		--*)
			lib_err \${EX_USAGE} -- "\$1: Invalid option."
			;;
		*)
			break
			;;
	esac

	shift
done	
EOF
}

main "$@"
