#
# This is the appjail configuration file. The default values are
# intended to be out-of-the-box but if you need to, you can change
# any value, however, you should be careful.
#
# There are some keywords that will be replaced by values using the 
# syntax % plus KEYWORD plus %. At this time, there is no way to escape
# these characters, but it is unlikely that you will need such characters.
#
# You should not leave a varaible empty or delete it. This may lead to
# unexpected behavior. However, this may change in the future.
#
# Some variables are self-explanatory, so I will only comment on the
# ambiguities.
#

#
# PREFIX is used as the place where appjail places its stuff. By default
# it is the current directory, but /usr/local is recommended if appjail
# will be a system-wide tool.
#
PREFIX="`realpath`"

#
# SHAREDIR is the place where commands, libraries, examples, and scripts
# are used by appjail.
#
SHAREDIR="${PREFIX}/share/appjail"

COMMANDS="${SHAREDIR}/cmd"
LIBDIR="${SHAREDIR}/lib"
SCRIPTSDIR="${SHAREDIR}/scripts"
DATADIR="${PREFIX}/appjail"

#
# This is the place where you should put the template. The templates are
# just a jail.conf but it goes through a filter to replace %JAILNAME%
# and %JAILDIR%. No more, no less.
#
TEMPLATES="${PREFIX}/etc/appjail/templates"
#
# This is the default template when a command such as `appjail jail` or
# `appjail build` requires it. A general template is probably not
# realistic in many scenarios, so those commands allow you to set
# a specific template.
#
TEMPLATE_PREBUILD="full.conf"

#
# Appjail uses the cache in some commands to speed up their execution.
#
# Currently, Appjail only uses the cache when using `appjail install`
# when no name is given for an appjail application or when the cache
# is not disabled. The cache in this command is used because a user
# can uninstall an appjail application and install it again, so
# generating a checksum name is not desirable unless the user
# has a fast CPU and fast storage. See `appjail help install`
# for more details.
#
CACHEDIR="${DATADIR}/cache"

#
# This is the place where the jails are installed. This directory is
# used by `appjail jail`.
#
# Jails and appjails are not the same thing strictly speaking. Jails
# are the jails we already knew and appjails are a way to install a
# jail and use it in a a specific way, such as running an application
# such as a browser, a web server, an RDBMS or whatever you want.
# Of course, you can do that using a jail, but the idea is to share
# it with a friend in the same way you would an installer with the
# advantages of jails.
#
# Keywords:
# 
# - ARCH: The architecture used.
# - VERSION: The FreeBSD version used.
#
# This is a convenient nomenclature, you can remove it if you want, but I
# recommend that you keep it.
#
JAILDIR="${DATADIR}/jails/%ARCH%/%VERSION%"

#
# This is the place where the appjails are installed. This directory is
# used by `appjail install` and many related commands such as start,
# stop, run, etc.
#
APPSDIR="${DATADIR}/apps"

#
# This is an environment variable that is probably already defined. This
# variable is used by `appjail edit`.
#
EDITOR=${EDITOR:-ee}

#
# DOWNLOADURL is the URL where the components will be downloaded and
# COMPONENTSDIR is the directory where the components are stored.
#
# The keywords have the same meaning as JAILDIR.
#
DOWNLOADURL="https://download.freebsd.org/releases/%ARCH%/%VERSION%"
COMPONENTSDIR="${DATADIR}/components/%ARCH%/%VERSION%"
#
# Components to be downloaded. The order is important.
#
COMPONENTS="base.txz"

#
# Command used to download files.
#
# Keywords:
#
# - OUTPUT_NAME: The name of the file being downloaded.
# - DOWNLOADURL: See DOWNLOADURL variable.
#
FETCH_CMD="/usr/bin/fetch -Fpr -o \"%OUTPUT_NAME%\" \"%DOWNLOADURL%\""
#
# Some commands for downloading files may not download a file if it is
# already on the filesystem, but others do not. When this variable is
# set to 0, appjail does not download a file if it already exists. This
# is convenient even if the command used to download files already has
# a function to do so, because using test(1) is faster.
#
FORCE_DOWNLOAD=0

TAR_BINARY="/usr/bin/tar"
TAR_COMPRESS_ARGS="--zstd -cf \"%FILE%\" -C \"%DIRECTORY%\""
TAR_DECOMPRESS_ARGS="-xpf \"%FILE%\" -C \"%DIRECTORY%\""
# The -k flag is necessary because when the appjail is tiny, the files
# do not need to be overwritten.
TAR_DECOMPRESS_JAIL_ARGS="-k ${TAR_DECOMPRESS_ARGS}"
COMPRESS_CMD="${TAR_BINARY} ${TAR_COMPRESS_ARGS} ."
DECOMPRESS_CMD="${TAR_BINARY} ${TAR_DECOMPRESS_ARGS}"

#
# This variables may affect others variables that uses the keywords
# ARCH and VERSION.
#
FREEBSD_ARCH="amd64"
FREEBSD_VERSION="13.1-RELEASE"

#
# Some commands need privileges to perform a task. su(1) is used because
# it is in the base system, but you can change it to doas(1) or sudo(8)
# if you prefer.
#
# Appjail does not need privileges for all tasks. so it is recommended
# not to run it as root. Appjail does not check if your are root.
#
SU_CMD="su -m root -c '/bin/sh -c \"%CMD%\"'"

#
# This user will be used to log into the jail. This user is inside the jail,
# not the host.
#
JAILUSER="root"

#
# This command will be executed when the `appjail jail` command is executed
# in the chroot phase.
#
CHROOT_PROGRAM="/bin/sh"

#
# This command will be executed when entering the jail when the
# `appjail jail` is executed in the jail phase.
#
# If you use the -P parameter in `appjail jail`, you need to escape the
# especial characters. For example: -P 'login\ -f\ root'
#
CONSOLE_PROGRAM="login -f ${JAILUSER}"
